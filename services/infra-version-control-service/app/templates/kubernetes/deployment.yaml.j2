apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ name }}
  namespace: {{ namespace }}
  labels:
    app: {{ name }}
    {% for key, value in labels.items() %}
    {{ key }}: {{ value }}
    {% endfor %}
  {% if annotations %}
  annotations:
    {% for key, value in annotations.items() %}
    {{ key }}: {{ value }}
    {% endfor %}
  {% endif %}
spec:
  replicas: {{ replicas }}
  selector:
    matchLabels:
      app: {{ name }}
  template:
    metadata:
      labels:
        app: {{ name }}
        {% for key, value in labels.items() %}
        {{ key }}: {{ value }}
        {% endfor %}
    spec:
      containers:
      - name: {{ name }}
        image: {{ image }}
        {% if ports %}
        ports:
        {% for port in ports %}
        - containerPort: {{ port }}
          protocol: TCP
        {% endfor %}
        {% endif %}
        {% if env_vars %}
        env:
        {% for key, value in env_vars.items() %}
        - name: {{ key }}
          value: "{{ value }}"
        {% endfor %}
        {% endif %}
        {% if resources %}
        resources:
          {% if resources.limits %}
          limits:
            {% for key, value in resources.limits.items() %}
            {{ key }}: {{ value }}
            {% endfor %}
          {% endif %}
          {% if resources.requests %}
          requests:
            {% for key, value in resources.requests.items() %}
            {{ key }}: {{ value }}
            {% endfor %}
          {% endif %}
        {% endif %}
        livenessProbe:
          httpGet:
            path: /health
            port: {{ ports[0] if ports else 8080 }}
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: {{ ports[0] if ports else 8080 }}
          initialDelaySeconds: 5
          periodSeconds: 5
